import { PrismaClient } from '@prisma/client';
import { z } from 'zod';
import DOMPurify from 'dompurify';
import { JSDOM } from 'jsdom';

const window = new JSDOM('').window;
const DOMPurify = DOMPurify(window);

const createBlog = z.object({
  title: z.string(),
  content: z.string(),
});

blogRoutes.post("/", async (c) => {
  try {
    const prisma = new PrismaClient({
      datasourceUrl: c.env.DATABASE_URL,
    }).$extends(withAccelerate());

    const body = await c.req.json();
    const { success, error } = createBlog.safeParse(body);

    if (!success) {
      c.status(400);
      return c.json({ error: error.issues });
    }

    const authorId = c.get("userId");
    const sanitizedContent = DOMPurify.sanitize(body.content);

    const blog = await prisma.post.create({
      data: {
        title: body.title,
        content: sanitizedContent,
        authorId,
      },
    });

    return c.json({
      id: blog.id,
    });
  } catch (error) {
    if (error instanceof Prisma.PrismaClientKnownRequestError) {
      c.status(500);
      return c.json({ error: "Database error" });
    }
    c.status(500);
    return c.json({ error: "Internal Server Error" });
  }
});
